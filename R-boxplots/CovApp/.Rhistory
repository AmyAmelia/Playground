shiny::runApp()
install.packages("tidyverse")
runApp()
2+2
test <- 2+2
test
print test
2+2
test <- 2+6
print(test
2+2
test <- 2+6
test
2+2
test <- 2+6
test
install.packages(c("ggpubr", "ROCR"))
Lit_splice_all <- read_delim("~/Desktop/Lit_splice_reduc_all.txt",
"\t", escape_double = FALSE, na = "NA",
trim_ws = TRUE)
library(ggplot2)
library(ROCR)
library(readr)
library(ggpubr)
# Load in main file
Lit_splice_all <- read_delim("~/Desktop/Lit_splice_reduc_all.txt",
"\t", escape_double = FALSE, na = "NA",
trim_ws = TRUE)
View(Lit_splice_all)
View(Lit_splice_all)
region <- ggplot(Lit_splice_all, aes(Location, fill = Lit_splice_all$`Variants Effect on splicing`)) + geom_bar(position = position_dodge(width = 1))+ labs( title="Variant location in relation to transcripts (as predicted by VEP)") +
xlab("")+  theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background = element_blank(), axis.line = element_line(colour = "black"))  + labs(fill= "Effect of varaint\n on splicing")
loc <- ggplot(Lit_splice_all, aes(distNearestSS, fill = Lit_splice_all$`Variants Effect on splicing`)) + geom_histogram(alpha = 0.7, bins =200, ) + xlim(range(-100:100)) + ylim(range(0:500)) + labs( title="Distribution of splice site variants in relation to the nearest splice site") + xlab("Distance to nearest splice site (bp)") + theme_bw()  + labs(fill= "Effect of varaint\n on splicing")
plot(loc)
ggarrange(region,loc,
labels = c("A", ""),ncol = 1, nrow = 2)
ggarrange(region,loc,
labels = c("A", "B"),ncol = 1, nrow = 2)
# Ggplot2 library
library(ggplot2)
# Data
names=c(rep("A", 80) , rep("B", 50) , rep("C", 70))
value=c( sample(2:5, 80 , replace=T) , sample(4:10, 50 , replace=T),
sample(1:7, 70 , replace=T) )
data=data.frame(names,value)
View(data)
View(data)
View(data)
#Graph
qplot( x=names , y=value , data=data , geom=c("boxplot","jitter") , fill=names)
# First type of color
ggplot(data, aes(name,value)) +
geom_violin(aes(fill = name))
ggplot(data, aes(factor(name),value)) +
geom_violin(aes(fill = name))
# First type of color
ggplot(data, aes(data.name,data.value)) +
geom_violin(aes(fill = data.name))
ggplot(data, aes(x=name, y=value)) +
geom_violin()
#Graph
qplot( x=names , y=value , data=data , geom=c("boxplot","jitter") , fill=names)
# First type of color
ggplot(data, aes(x=names, y=value)) +
geom_violin()
ggplot(data, aes(x=names, y=value, fill=names)) +
geom_violin()
ggplot(data, aes(x=names, y=value, fill=names)) +
geom_violin()+scale_fill_brewer(palette="Dark2")
ggplot(data, aes(x=names, y=value, fill=names)) +
geom_violin()+scale_fill_brewer(palette="Purples")
DBASS_edit <- read.delim("~/Downloads/DBASS_edit.tsv", na.strings="-")
View(DBASS_edit)
